{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chat/chat.component.css","webpack:///./src/app/chat/chat.component.html","webpack:///./src/app/chat/chat.component.ts","webpack:///./src/app/list-chats/list-chats.component.css","webpack:///./src/app/list-chats/list-chats.component.html","webpack:///./src/app/list-chats/list-chats.component.ts","webpack:///./src/app/list-matches/list-matches.component.css","webpack:///./src/app/list-matches/list-matches.component.html","webpack:///./src/app/list-matches/list-matches.component.ts","webpack:///./src/app/match-builder/match-builder.component.css","webpack:///./src/app/match-builder/match-builder.component.html","webpack:///./src/app/match-builder/match-builder.component.ts","webpack:///./src/app/match.service.ts","webpack:///./src/app/match/match.component.css","webpack:///./src/app/match/match.component.html","webpack:///./src/app/match/match.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/notfound/notfound.component.css","webpack:///./src/app/notfound/notfound.component.html","webpack:///./src/app/notfound/notfound.component.ts","webpack:///./src/app/players/players.component.css","webpack:///./src/app/players/players.component.html","webpack:///./src/app/players/players.component.ts","webpack:///./src/app/scoreboard/scoreboard.component.css","webpack:///./src/app/scoreboard/scoreboard.component.html","webpack:///./src/app/scoreboard/scoreboard.component.ts","webpack:///./src/app/socketio.service.ts","webpack:///./src/app/user-info/user-info.component.css","webpack:///./src/app/user-info/user-info.component.html","webpack:///./src/app/user-info/user-info.component.ts","webpack:///./src/app/user-login/user-login.component.css","webpack:///./src/app/user-login/user-login.component.html","webpack:///./src/app/user-login/user-login.component.ts","webpack:///./src/app/user-signup/user-signup.component.css","webpack:///./src/app/user-signup/user-signup.component.html","webpack:///./src/app/user-signup/user-signup.component.ts","webpack:///./src/app/user.service.ts","webpack:///./src/app/utilities.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { UserLoginComponent } from './user-login/user-login.component';\nimport { UserInfoComponent } from './user-info/user-info.component';\nimport { UserSignupComponent } from './user-signup/user-signup.component';\nimport { ScoreboardComponent } from './scoreboard/scoreboard.component';\nimport { PlayersComponent } from './players/players.component';\nimport { ListChatsComponent } from './list-chats/list-chats.component';\nimport { MatchBuilderComponent } from './match-builder/match-builder.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { NotfoundComponent } from './notfound/notfound.component';\nimport { ListMatchesComponent } from './list-matches/list-matches.component';\nimport { MatchComponent } from './match/match.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: UserLoginComponent },\n  { path: 'user', component: UserInfoComponent },\n  { path: 'user/:username', component: UserInfoComponent },\n  { path: 'user/:username/matches', component: ListMatchesComponent },\n  { path: 'signup', component: UserSignupComponent },\n  { path: 'scoreboard', component: ScoreboardComponent },\n  { path: 'players', component: PlayersComponent },\n  { path: 'chats', component: ListChatsComponent },\n  { path: 'chats/:id', component: ChatComponent },\n  { path: 'match', component: ListMatchesComponent },\n  { path: 'match/:id/board', component: MatchBuilderComponent},\n  { path: 'match/:id', component: MatchComponent },\n  { path: '**', component: NotfoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"h2{\\n    text-align: center;\\n}\"","module.exports = \"<!-- Navigation -->\\n<app-navbar></app-navbar>\\n<!-- Page Content -->\\n<div id=\\\"myModal\\\" class=\\\"modal fade\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-body\\\">\\n        <p>Hai ricevuto un messaggio!</p>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<section class=\\\"py-5\\\">\\n  <div class=\\\"container py-5\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</section>\"","import { Component } from \"@angular/core\";\nimport { UserService } from \"./user.service\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {\n  constructor(private us: UserService) {}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './/app-routing.module';\n// Components\nimport { AppComponent } from './app.component';\nimport { UserLoginComponent } from './user-login/user-login.component';\nimport { UserInfoComponent } from './user-info/user-info.component';\nimport { UserSignupComponent } from './user-signup/user-signup.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { ScoreboardComponent } from './scoreboard/scoreboard.component';\nimport { PlayersComponent } from './players/players.component';\nimport { ListChatsComponent } from './list-chats/list-chats.component';\nimport { MatchBuilderComponent } from './match-builder/match-builder.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { NotfoundComponent } from './notfound/notfound.component';\nimport { ListMatchesComponent } from './list-matches/list-matches.component';\n\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\n\n// Services\nimport { UserService } from './user.service';\nimport { UtilitiesService } from './utilities.service';\nimport { SocketioService } from './socketio.service';\nimport { MatchService } from './match.service';\nimport { MatchComponent } from './match/match.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserLoginComponent,\n    UserInfoComponent,\n    UserSignupComponent,\n    NavbarComponent,\n    ScoreboardComponent,\n    PlayersComponent,\n    ListChatsComponent,\n    MatchBuilderComponent,\n    ChatComponent,\n    NotfoundComponent,\n    ListMatchesComponent,\n    MatchComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    AngularFontAwesomeModule\n  ],\n  providers: [\n    {provide: UserService, useClass: UserService},\n    {provide: UtilitiesService, useClass: UtilitiesService},\n    {provide: SocketioService, useClass: SocketioService},\n    {provide: MatchService, useClass: MatchService}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".me {\\n    width: 60%;\\n    text-align: right;\\n    float: right;\\n}\\n\\n.other {\\n    width: 60%;\\n    text-align: left;\\n    float: left;\\n}\"","module.exports = \"<div class=\\\"row col\\\">\\n  <h1>Messaggi</h1>\\n</div>\\n<div class=\\\"container py-2\\\">\\n  <div *ngIf=\\\"messages.length === 0\\\">Nessun messaggio presente nella chat</div>\\n  <div *ngIf=\\\"-(showMessage) <= messages.length\\\" style=\\\"text-align: center\\\">\\n    <a style=\\\"color: #083d8d\\\" (click)=\\\"showMoreMessages()\\\">Visualizza più messaggi</a>\\n  </div>\\n  <div *ngFor=\\\"let message of messagesToShow\\\">\\n    <div *ngIf=\\\"message.senderID == id_user\\\">\\n      <div class=\\\"alert alert-dark py-2 me\\\">\\n        <span>{{message.text}}</span>\\n        <br>\\n        <span style=\\\"font-size: .8em\\\">{{message.sentAt}}</span>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"message.senderID != id_user\\\">\\n      <div class=\\\"alert alert-info py-2 other\\\">\\n        <span>{{message.text}}</span>\\n        <br>\\n        <span style=\\\"font-size: .8em\\\">{{message.sentAt}}</span>\\n      </div>\\n    </div>\\n  </div>\\n  {{scrollDown()}}\\n  <form>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"messageTextArea\\\"></label>\\n      <textarea class=\\\"form-control\\\" id=\\\"messageTextArea\\\" rows=\\\"3\\\" [(ngModel)] = \\\"textMessage\\\" maxlength=\\\"1000\\\" name=\\\"message\\\"></textarea>\\n    </div>\\n    <div *ngIf=\\\"error\\\"class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n        {{error}}\\n    </div>\\n    <div class=\\\"row col-sm-12\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"sendMessage()\\\">Invia il messaggio</button>\\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { UtilitiesService } from '../utilities.service';\nimport { Router } from '@angular/router';\nimport { SocketioService } from '../socketio.service';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n  private messages = [];\n  private messagesToShow = [];\n  private id_user;\n  private error = undefined;\n  private id_chat;\n  private textMessage = undefined;\n  private showMessage = -10;\n  constructor(private userService: UserService,\n    private utilities: UtilitiesService,\n    private router: Router,\n    private socketService: SocketioService) { }\n\n  ngOnInit() {\n    this.utilities.check_auth(this.userService.get_token());\n    this.id_user = this.userService.get_userId();\n    this.id_chat = this.router.url.split('/').pop();\n    this.getMessagge();\n    this.socketService.connect(this.id_chat).subscribe((m) => {\n      this.getMessagge();\n    });\n  }\n\n  showMoreMessages() {\n    this.showMessage -= 10;\n    this.messagesToShow = this.messages.slice(this.showMessage);\n  }\n\n  getMessagge() {\n    this.userService.getUserSingleChat(this.router.url.split('/').pop()).subscribe((messages) => {\n      this.messages = messages[0]['listMessage'];\n      if (this.messages.length <= 10) {\n        this.messagesToShow = this.messages;\n      } else {\n        this.messagesToShow = this.messages.slice(this.showMessage);\n      }\n      this.scrollDown();\n      // console.log('MESSAGGI: ' + JSON.stringify(this.messages) + ' num. messaggi' + this.messages.length);\n    });\n  }\n\n  scrollDown() {\n    window.scrollTo(0, document.body.scrollHeight);\n  }\n\n  sendMessage() {\n    if (this.textMessage === '' || this.textMessage === undefined) {\n      this.error = 'Impossibile inviare un messaggio vuoto';\n    } else {\n      //console.log(this.textMessage);\n      this.userService.sendMessage(this.id_chat, this.textMessage).subscribe((data) => {\n        this.textMessage = '';\n        console.log(JSON.stringify(data));\n      });\n      this.error = undefined;\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row col\\\">\\n  <h1>Le tue chat</h1>\\n</div>\\n<div *ngIf=\\\"chats.length === 0\\\">\\n  <h2>Nessuna chat presente</h2>\\n  <p>\\n    <a routerLink=\\\"/players\\\">Cerca</a> un giocatore per iniziare una chat con lui</p>\\n</div>\\n<div *ngFor=\\\"let chat of chats\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-8\\\">\\n      <span class=\\\"align-middle\\\">\\n        <a routerLink='/chats/{{chat._id}}'>Clicca</a> per visualizzare la tra l'utente\\n        <span *ngIf=\\\"chat.user1ID == null\\\"><i>utente eliminato</i></span>\\n        <a *ngIf=\\\"chat.user1ID != null && chat.user1ID.username != userService.get_username()\\\" routerLink='/user/{{chat.user1ID.username}}'>{{chat.user1ID.username}}</a>\\n        <a *ngIf=\\\"chat.user1ID != null && chat.user1ID.username == userService.get_username()\\\" routerLink='/user'>{{chat.user1ID.username}}</a>\\n        e l'utente\\n        <span *ngIf=\\\"chat.user2ID == null\\\"><i>utente eliminato</i></span>\\n        <a *ngIf=\\\"chat.user2ID != null && chat.user2ID.username != userService.get_username()\\\" routerLink='/user/{{chat.user2ID.username}}'>{{chat.user2ID.username}}</a>\\n        <a *ngIf=\\\"chat.user2ID != null && chat.user2ID.username == userService.get_username()\\\" routerLink='/user'>{{chat.user2ID.username}}</a>\\n      </span>\\n    </div>\\n    <div class=\\\"col-4\\\">\\n      <button class=\\\"alert alert-danger align-middle\\\" style=\\\"padding:.3em\\\" (click)=\\\"deleteChat(chat._id)\\\">Cancella la chat</button>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { UtilitiesService } from '../utilities.service';\nimport { SocketioService } from '../socketio.service';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-list-chats',\n  templateUrl: './list-chats.component.html',\n  styleUrls: ['./list-chats.component.css']\n})\nexport class ListChatsComponent implements OnInit {\n  private chats = [];\n  constructor(private userService: UserService, private utilities: UtilitiesService, private socket: SocketioService) { }\n\n  ngOnInit() {\n    this.utilities.check_auth(this.userService.get_token());\n    this.getUserChats();\n    this.socket.connect(this.userService.get_userId()).subscribe((m) => {\n      $('#myModal').modal('show');\n      $('.modal-backdrop').removeClass('modal-backdrop');\n      setTimeout(function () {\n        $('#myModal').modal('hide');\n      }, 2000);\n    });\n  }\n\n  getUserChats() {\n    this.userService.getUserChats().subscribe((data) => {\n      // console.log('Chat trovate' + JSON.stringify(data));\n      this.chats = data[0]['chatList'];\n    });\n  }\n\n  deleteChat(id: string) {\n    const answer = confirm('Sei sicuro di voler cancellare questa chat?');\n    if (answer) {\n      this.userService.deleteChat(id).subscribe((data) => {\n        //console.log(JSON.stringify(data));\n        this.getUserChats();\n      });\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"userRoutingMatch; then matchUser; else matchWaiting\\\"></div>\\n\\n<ng-template #matchUser>\\n  <h1>Lista dei match</h1>\\n  <div *ngIf=\\\"matches.length === 0\\\">\\n    <h2>Il giocatore non ha giocato alcun match!</h2>\\n  </div>\\n  <div *ngFor=\\\"let match of matches\\\">\\n    <p>Data della partita: {{match.timestamp}}</p>\\n    <div [ngSwitch]=\\\"match.status\\\">\\n      <p *ngSwitchCase=\\\"0\\\">Match in attesa del secondo partecipante, <a style=\\\"color: #0056b3\\\" (click)=\\\"matchService.joinMatch(match._id, userService.get_username())\\\">sfidalo!</a></p>\\n      <p *ngSwitchCase=\\\"1\\\">Match in fase di costruzione</p>\\n      <p *ngSwitchCase=\\\"2\\\">Match in fase di gioco</p>\\n      <p *ngSwitchCase=\\\"3\\\">Match finito, <a style=\\\"color: #0056b3\\\" routerLink=\\\"/match/{{match._id}}\\\">guarda</a> com'è finita la partita</p>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #matchWaiting>\\n  <h1>Lista dei match in attesa</h1>\\n  <div *ngIf=\\\"matches.length === 0\\\">\\n    <h2>Nessun match pronto per essere giocato!</h2>\\n  </div>\\n  <div *ngFor=\\\"let match of matches\\\">\\n    <div *ngIf=\\\"match.owner != null\\\">\\n      <p>\\n        <b>Data di creazione</b> {{match.timestamp}}</p>\\n      <p *ngIf=\\\"match.owner.username !== undefined && match.owner.username != userService.get_username()\\\">\\n        <b>Entra nella partita di: </b>\\n        <a routerLink=\\\"/user/{{match.owner.username}}\\\">{{match.owner.username}}</a>\\n      </p>\\n      <p *ngIf=\\\" match.owner.username !== undefined && match.owner.username == userService.get_username()\\\">\\n        <b>Guarda lo stato della tua partita</b>\\n      </p>\\n      <p *ngIf=\\\" match.opponent !== undefined && ( match.owner == userService.get_userId() || match.opponent == userService.get_userId())\\\">\\n        <b>Hai una partita in corso</b>\\n      </p>\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"enterMatch(match._id)\\\">Entra nella partita!</button>\\n      <hr>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"errormessage\\\" class=\\\"alert alert-primary-danger\\\">{{errormessage}}</div>\\n  <button *ngIf=\\\"userHadAlreadyWaitingMatch != true\\\" class=\\\"btn btn-primary\\\" (click)=\\\"createMatch()\\\">Crea una nuova partita</button>\\n</ng-template>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { UtilitiesService } from '../utilities.service';\nimport { MatchService } from '../match.service';\nimport { SocketioService } from '../socketio.service';\nimport { Router, RouterLink } from '@angular/router';\nimport { forEach } from '@angular/router/src/utils/collection';\nimport * as io from 'socket.io-client';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-list-matches',\n  templateUrl: './list-matches.component.html',\n  styleUrls: ['./list-matches.component.css']\n})\nexport class ListMatchesComponent implements OnInit {\n\n  private matches = [];\n  private errormessage = undefined;\n  private userRoutingMatch = undefined;\n  private userHadAlreadyWaitingMatch = false;\n  private matchOwnedId: string;\n\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private utilities: UtilitiesService,\n    private matchService: MatchService,\n    private socketService: SocketioService) { }\n\n  ngOnInit() {\n    this.utilities.check_auth(this.userService.get_token());\n    this.socketService.connect(this.userService.get_userId()).subscribe((m) => {\n      $('#myModal').modal('show');\n      $('.modal-backdrop').removeClass('modal-backdrop');\n      setTimeout(function () {\n        $('#myModal').modal('hide');\n      }, 2000);\n    });\n    const socket = io(this.userService.url);\n    socket.on('new match added', (m) => {\n      console.log(m);\n      this.getWaitingMatch();\n    });\n    if (this.router.url === '/match') {\n      this.getWaitingMatch();\n    } else {\n      const arrayString = this.router.url.split('/');\n      this.userRoutingMatch = arrayString[2];\n      this.getUserMatch();\n    }\n  }\n\n  getWaitingMatch() {\n    this.matches = [];\n    this.matchService.getUserActiveMatches(this.userService.get_username())\n      .subscribe((match) => {\n        if (Object.keys(match).length === 0) {\n          this.matchService.getWaitingMatch().subscribe((matches) => {\n            matches.forEach(element => {\n              if (element.owner != null) {\n                if (this.userService.get_userId() === element.owner._id) {\n                  this.userHadAlreadyWaitingMatch = true;\n                  this.matchOwnedId = element._id;\n                }\n              }\n            });\n            this.matches = matches;\n          });\n        } else {\n          this.userHadAlreadyWaitingMatch = true;\n          this.matchOwnedId = match._id;\n          this.matches = [match];\n        }\n      });\n  }\n\n  enterMatch(idMatch: string) {\n\n    if (this.userHadAlreadyWaitingMatch) {\n      this.router.navigate(['/match/' + this.matchOwnedId + '/board']);\n    } else {\n      const request = this.matchService.joinMatch(idMatch, this.userService.get_userId());\n      request.subscribe(\n        (data) => {\n          //console.log(data);\n          if (!data.error) {\n            this.router.navigate(['/match/' + idMatch + '/board']);\n          }\n        },\n        (error) => {\n          console.log('Impossibile entrare nella partita');\n        }\n      );\n    }\n  }\n\n  getUserMatch() {\n    this.matches = [];\n    this.matchService.getUserMatches(this.userRoutingMatch).subscribe((data) => {\n      this.matches = data;\n    });\n  }\n\n  createMatch() {\n    this.matchService.createMatch().subscribe((data) => {\n      this.errormessage = undefined;\n      this.router.navigate(['/match/' + data.id + '/board']);\n    }, (err) => {\n      this.errormessage = err.error.errormessage;\n    });\n  }\n}\n","module.exports = \".vertical {\\n  -webkit-transform: rotate(90deg);\\n          transform: rotate(90deg);\\n}\\n\\n.horizonatal {\\n  -webkit-transform: none;\\n          transform: none;\\n}\\n\\n.ship-group {\\n  display: inline-block;\\n  margin: 10px 20px;\\n}\\n\\n.fa-times, .fa-repeat {\\n  position: absolute;\\n}\\n\\n.destroyer .fa-repeat {\\n  right: 15px;\\n  top: 20px\\n}\\n\\n.destroyer .fa-times {\\n  right: 15px;\\n  bottom: 30px\\n}\\n\\n.submarine .fa-repeat {\\n  right: 15px;\\n  top: 30px\\n}\\n\\n.submarine .fa-times {\\n  right: 15px;\\n  bottom: 45px\\n}\\n\\n.battleship .fa-repeat {\\n  right: 15px;\\n  top: 50px\\n}\\n\\n.battleship .fa-times {\\n  right: 15px;\\n  bottom: 45px\\n}\\n\\n.aircraft-carrier .fa-repeat {\\n  right: 15px;\\n  top: 50px\\n}\\n\\n.aircraft-carrier .fa-times {\\n  right: 15px;\\n  bottom: 75px\\n}\\n\\n.ship {\\n  position: relative;\\n  display: block;\\n  float: left;\\n}\\n\\n.ship[draggable=\\\"false\\\"] {\\n  opacity: 0.5;\\n}\\n\\n.held {\\n  border: solid 10px black;\\n  background-color: black;\\n}\\n\\n.holder {\\n  height: 50px;\\n  width: 50px;\\n  border: solid 1px #666;\\n  background-color: white;\\n  display: inline-block;\\n}\\n\\n.hovered {\\n  border: dotted 5px black;\\n}\\n\\n.invisible {\\n  display: none;\\n}\\n\\n#container {\\n  margin: auto;\\n  top: 100px;\\n  width: 400px;\\n  position: relative;\\n}\\n\\n.board-row {\\n  line-height: 0px;\\n  max-width: 100%;\\n  display: block;\\n  text-align: center;\\n}\\n\\n@media (max-width: 1025px) {\\n  .holder {\\n    width: 45px;\\n    height: 45px;\\n  }\\n  .destroyer {\\n    height: 50px;\\n  }\\n  .submarine {\\n    height: 60px;\\n  }\\n  .battleship {\\n    height: 70px;\\n  }\\n  .aircraft-carrier{\\n    height: 80px;\\n  }\\n}\\n\\n@media screen and (max-width: 600px) {\\n  .holder {\\n    width: 30px;\\n    height: 30px;\\n  }\\n}\\n\"","module.exports = \"<h1>Schermata del match</h1>\\n<div *ngIf=\\\"match\\\">\\n  <div [ngSwitch]=\\\"match.status\\\">\\n    <h2 *ngSwitchCase=\\\"0\\\">Match in attesa del secondo partecipante</h2>\\n    <h2 *ngSwitchCase=\\\"1\\\">Match in fase di costruzione</h2>\\n    <h2 *ngSwitchCase=\\\"2\\\">Match in fase di gioco</h2>\\n    <h2 *ngSwitchCase=\\\"3\\\">Match finito</h2>\\n  </div>\\n  <div *ngIf=\\\"match.status == 1\\\" >\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-6\\\" #battlefieldDOM>\\n        <h2>Posiziona le tue navi</h2>\\n        <div class=\\\"board-row\\\" *ngFor=\\\"let row of board\\\">\\n          <div class=\\\"holder\\\" [ngStyle]=\\\"{'background-color': cell.getStatus()}\\\" [attr.row]=\\\"cell.getRow()\\\" [attr.col]=\\\"cell.getCol()\\\" *ngFor=\\\"let cell of row\\\">\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-lg-6\\\" #shipsDOM>\\n        <div class=\\\"ship-group\\\">\\n          <h6>Cacciatorpediniere - grandezza: 2</h6>\\n          <div class=\\\"ship destroyer\\\" [attr.draggable]=\\\"!ship.isUsed()\\\" *ngFor=\\\"let ship of destroyers\\\"  [attr.id]=\\\"ship.getId()\\\">\\n            <img src=\\\"assets/images/destroyer.svg\\\" [ngClass]=\\\"{'horizontal': ship.getOrientation() == 0, 'vertical': ship.getOrientation() == 1, 'destroyers':true }\\\"/>\\n            <i class=\\\"fa fa-repeat\\\" (click)=\\\"rotate(ship)\\\" aria-hidden=\\\"true\\\"></i>\\n            <div *ngIf=\\\"ship.isUsed()\\\">\\n              <i class=\\\"fa fa-times\\\" (click)=\\\"removeFromBoard(ship)\\\"aria-hidden=\\\"true\\\"></i>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"ship-group\\\">\\n          <h6>Sottomarino - grandezza: 3</h6>\\n          <div class=\\\"ship submarine\\\" [attr.draggable]=\\\"!ship.isUsed()\\\" *ngFor=\\\"let ship of submarines\\\" [attr.id]=\\\"ship.getId()\\\">\\n            <img src=\\\"assets/images/submarine.svg\\\" [ngClass]=\\\"{'horizontal': ship.getOrientation() == 0, 'vertical': ship.getOrientation() == 1, 'submarines':true }\\\"/>\\n            <i class=\\\"fa fa-repeat\\\" (click)=\\\"rotate(ship)\\\" aria-hidden=\\\"true\\\"></i>\\n            <div *ngIf=\\\"ship.isUsed()\\\">\\n              <i class=\\\"fa fa-times\\\" (click)=\\\"removeFromBoard(ship)\\\" aria-hidden=\\\"true\\\"></i>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"ship-group\\\">\\n        <h6>Corazzata - grandezza: 4</h6>\\n          <div class=\\\"ship battleship\\\" [attr.draggable]=\\\"!ship.isUsed()\\\" *ngFor=\\\"let ship of battleships\\\" [attr.id]=\\\"ship.getId()\\\">\\n            <img src=\\\"assets/images/battleship.svg\\\" [ngClass]=\\\"{'horizontal': ship.getOrientation() == 0, 'vertical': ship.getOrientation() == 1, 'battleships':true }\\\"/>\\n            <i class=\\\"fa fa-repeat\\\" (click)=\\\"rotate(ship)\\\" aria-hidden=\\\"true\\\"></i>\\n            <div *ngIf=\\\"ship.isUsed()\\\">\\n              <i class=\\\"fa fa-times\\\" (click)=\\\"removeFromBoard(ship)\\\" aria-hidden=\\\"true\\\"></i>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"ship-group\\\">\\n          <h6>Portaerei - grandezza: 5</h6>\\n          <div class=\\\"ship aircraft-carrier\\\" [attr.draggable]=\\\"!ship.isUsed()\\\" *ngFor=\\\"let ship of aircraftCarriers\\\" [attr.id]=\\\"ship.getId()\\\">\\n            <img src=\\\"assets/images/aircraft-carrier.svg\\\" [ngClass]=\\\"{'horizontal': ship.getOrientation() == 0, 'vertical': ship.getOrientation() == 1, 'aircraftCarriers':true }\\\"/>\\n            <i class=\\\"fa fa-repeat\\\" (click)=\\\"rotate(ship)\\\" aria-hidden=\\\"true\\\"></i>\\n            <i class=\\\"fa fa-times\\\" (click)=\\\"removeFromBoard(ship)\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"ship.isUsed()\\\"></i>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <button type=\\\"button\\\" [disabled]=\\\"!submitEnabled\\\" (click)=\\\"sendBoard()\\\" class=\\\"btn btn-primary\\\">Inizia la partita</button>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"alert alert-success\\\" *ngIf=\\\"boardUpdated\\\">\\n          <strong>Inviato!</strong> Non appena il tuo avversario posizionerà il campo inizierà la partita\\n        </div>\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n          <strong>Errore</strong> {{errorMessage}}\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit, ElementRef, ViewChild, AfterViewChecked, ViewEncapsulation } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { UtilitiesService } from '../utilities.service';\nimport { MatchService, Ship, ShipEnum, Cell, CellStatus, Orientation } from '../match.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport * as io from 'socket.io-client';\ndeclare var $: any;\n@Component({\n  selector: 'app-match',\n  templateUrl: './match-builder.component.html',\n  styleUrls: ['./match-builder.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class MatchBuilderComponent implements OnInit, AfterViewChecked {\n  @ViewChild('battlefieldDOM') battlefieldDom: ElementRef;\n  private userName: string;\n  private userMatches: string;\n  private draggingShip: Ship;\n  private validDragging: boolean;\n  private shipsDict: any;\n  board: Cell[][];\n  ships: Array<Ship>;\n  destroyers: Array<Ship>;\n  submarines: Array<Ship>;\n  aircraftCarriers: Array<Ship>;\n  battleships: Array<Ship>;\n\n  submitEnabled = false;\n  boardUpdated = false;\n  error = false;\n  errorMessage = '';\n\n  columns: Array<string>;\n  rows: Array<string>;\n  private match;\n  private id_match;\n\n  constructor(\n    private userService: UserService,\n    private utilities: UtilitiesService,\n    private matchService: MatchService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.utilities.check_auth(this.userService.get_token());\n    this.ships = this.matchService.initShips();\n    this.aircraftCarriers = new Array();\n    this.battleships = new Array();\n    this.destroyers = new Array();\n    this.submarines = new Array();\n    this.ships.forEach(ship => {\n      switch (ship.getType()) {\n        case ShipEnum.AIRCRAFTCARRIER:\n          this.aircraftCarriers.push(ship);\n          break;\n        case ShipEnum.BATTLESHIP:\n          this.battleships.push(ship);\n          break;\n        case ShipEnum.DESTROYER:\n          this.destroyers.push(ship);\n          break;\n        case ShipEnum.SUBMARINE:\n          this.submarines.push(ship);\n          break;\n      }\n    });\n    this.shipsDict = new Object();\n    this.ships.forEach((ship) => {\n      this.shipsDict[ship.getId()] = ship;\n    }\n    );\n    this.board = new Array();\n    for (let i = 0; i < 10; i++) {\n      this.board.push(new Array());\n      for (let j = 0; j < 10; j++) {\n        const cell = new Cell(j, i);\n        cell.setStatus(CellStatus.FREE);\n        this.board[i].push(cell);\n      }\n    }\n\n    this.activatedRoute.paramMap.subscribe((data) => {\n      this.id_match = data.get('id');\n      const socket = io(this.userService.url);\n      socket.on('broadcast ' + this.id_match, (m) => {\n        this.matchService.getMatchInfo(this.id_match).subscribe((match) => {\n          this.match = match;\n          if (match.status === 2) {\n            this.router.navigate(['/match/' + this.match._id]);\n          }\n        }, (err) => {\n          console.log(JSON.stringify(err));\n        });\n      });\n      this.matchService.getMatchInfo(this.id_match).subscribe((match) => {\n        this.match = match;\n        if (match.status === 2) {\n          this.router.navigate(['/match/' + this.match._id]);\n        }\n      }, (err) => {\n        console.log(JSON.stringify(err));\n      });\n    });\n  }\n  private getElemAt(x, y, classID) {\n    return $('body')\n      .find('.' + classID)\n      .filter(function () {\n       if ($(this).offset().top < y && y < parseInt($(this).offset().top, 10) + $(this).height()\n          && $(this).offset().left < x && x < parseInt($(this).offset().left, 10) + $(this).width()) {\n          return true;\n        }\n        return false;\n      });\n  }\n\n  ngAfterViewChecked() {\n    const component = this;\n    $('.ship').draggable({\n      start: function () {\n        component.dragstart(component.shipsDict[$(this).attr('id')]);\n      },\n      drag: function (event) {\n        component.dragover(component.getElemAt(event.pageX, event.pageY, 'holder'));\n      },\n      stop: function(event) {\n        component.drop(component.getElemAt(event.pageX, event.pageY, 'holder'));\n      },\n      snap: '.holder', snapTolerance: 10\n    });\n  }\n\n  rotate(ship: Ship) {\n    if (!ship.isUsed()) {\n      if (ship.getOrientation() === Orientation.HORIZONTAL) {\n        ship.setOrientation(Orientation.VERTICAL);\n      } else {\n        ship.setOrientation(Orientation.HORIZONTAL);\n      }\n    }\n  }\n\n  removeFromBoard(ship: Ship) {\n    ship.removeFromBoard();\n    for (let i = 0; i < this.board.length; i++) {\n      for (let j = 0; j < this.board[i].length; j++) {\n        if (this.board[i][j].getStatus() === CellStatus.OCCUPIED && this.board[i][j].getShipRef() === ship.getId()) {\n          this.board[i][j].removeShipRef();\n        }\n      }\n    }\n    this.submitEnabled = false;\n  }\n\n  dragstart(ship: Ship) {\n    this.draggingShip = ship;\n  }\n\n  private validDraggingCheck(row, col) {\n    if (this.draggingShip.getOrientation() === Orientation.HORIZONTAL) {\n      return col + Math.ceil(this.draggingShip.getLength() / 2) < 10 &&\n        col + 1 - Math.floor(this.draggingShip.getLength() / 2) >= 0 &&\n        this.checkOverlap(row, col);\n    } else {\n      return row + Math.ceil(this.draggingShip.getLength() / 2) < 10 &&\n        row + 1 - Math.floor(this.draggingShip.getLength() / 2) >= 0 &&\n        this.checkOverlap(row, col);\n    }\n  }\n\n  private checkOverlap(row, col) {\n    if (this.draggingShip.getOrientation() === Orientation.HORIZONTAL) {\n      for (let i = -1; i < 2; i++) {\n        for (let j = - Math.floor(this.draggingShip.getLength() / 2) - 1; j < Math.ceil(this.draggingShip.getLength() / 2) + 1; j++) {\n          const rowAux = row + i;\n          const colAux = col + j + 1;\n          if (rowAux >= 0 && rowAux < 10 && colAux >= 0 && colAux < 10 && this.board[rowAux][colAux].getStatus() === CellStatus.OCCUPIED) {\n            return false;\n          }\n        }\n      }\n    } else {\n      for (let i = - Math.floor(this.draggingShip.getLength() / 2) - 1; i < Math.ceil(this.draggingShip.getLength() / 2) + 1; i++) {\n        for (let j = -1; j < 2; j++) {\n          const rowAux = row + i + 1;\n          const colAux = col + j;\n          if (rowAux >= 0 && rowAux < 10 && colAux >= 0 && colAux < 10 && this.board[rowAux][colAux].getStatus() === CellStatus.OCCUPIED) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  private changeStatus(row, col, status: CellStatus) {\n    if (this.draggingShip.getOrientation() === Orientation.HORIZONTAL) {\n      for (let i = 0; i < this.board.length; i++) {\n        for (let j = 0; j < this.board[i].length; j++) {\n          if (this.board[i][j].getStatus() === CellStatus.OVER) {\n            this.board[i][j].setStatus(CellStatus.FREE);\n          }\n          if (row === i && (j === col ||\n            ((col >= j) && (col - j) < Math.floor(this.draggingShip.getLength() / 2)) ||\n            ((col < j) && (j - col) <= Math.ceil(this.draggingShip.getLength() / 2)))) {\n            this.board[i][j].setStatus(status);\n            if (status === CellStatus.OCCUPIED) {\n              this.board[i][j].setShipRef(this.draggingShip.getId());\n            }\n          }\n        }\n      }\n    } else {\n      for (let i = 0; i < this.board.length; i++) {\n        for (let j = 0; j < this.board[i].length; j++) {\n          if (this.board[i][j].getStatus() === CellStatus.OVER) {\n            this.board[i][j].setStatus(CellStatus.FREE);\n          }\n          if (col === j && (row === i ||\n            ((row > i) && (row - i) < Math.floor(this.draggingShip.getLength() / 2)) ||\n            ((row <= i) && (i - row) <= Math.ceil(this.draggingShip.getLength() / 2)))) {\n            this.board[i][j].setStatus(status);\n            if (status === CellStatus.OCCUPIED) {\n              this.board[i][j].setShipRef(this.draggingShip.getId());\n            }\n          }\n        }\n      }\n    }\n\n    if (status === CellStatus.OCCUPIED) {\n      let allShipsOnBoard = true;\n      let shipNotUsed: Ship;\n      this.ships.forEach((ship) => {\n        if (!ship.isUsed()) {\n          shipNotUsed = ship;\n          allShipsOnBoard = false;\n        }\n      });\n      // console.log(shipNotUsed);\n      this.submitEnabled = allShipsOnBoard;\n    }\n\n  }\n\n  dragover(elem) {\n    const row = parseInt($(elem).attr('row'), 10);\n    const col = parseInt($(elem).attr('col'), 10);\n    this.validDragging = this.validDraggingCheck(row, col);\n    if (this.validDragging) {\n      this.changeStatus(row, col, CellStatus.OVER);\n    }\n  }\n\n  drop(elem) {\n    const row = parseInt($(elem).attr('row'), 10);\n    const col = parseInt($(elem).attr('col'), 10);\n    if (this.validDragging) {\n      this.draggingShip.setUsed();\n      this.changeStatus(row, col, CellStatus.OCCUPIED);\n    }\n  }\n\n  // TODO: da implementare\n  sendBoard() {\n    this.matchService.sendBoard(this.board, this.ships, this.id_match).subscribe(\n      (data) => {\n        this.error = false;\n        this.boardUpdated = true;\n      }, (error) => {\n        this.errorMessage = error.error.errormessage;\n        this.error = true;\n      });\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { tap, filter, map } from 'rxjs/operators';\nimport { UserService } from './user.service';\nimport { UtilitiesService } from './utilities.service';\n\n\nexport const enum ShipEnum {\n  DESTROYER = 2,\n  SUBMARINE = 3,\n  BATTLESHIP = 4,\n  AIRCRAFTCARRIER = 5\n}\nexport const enum CellStatus {\n  FREE = '#0080FF',\n  OVER = '#0000FF',\n  OCCUPIED = '#64FE2E',\n  SHOOTED = '#f67',\n  SIKED = '#823'\n}\nexport const enum Orientation {\n  HORIZONTAL,\n  VERTICAL\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchService {\n\n  constructor(private http: HttpClient, private router: Router, private utilities: UtilitiesService, private userService: UserService) { }\n\n  getWaitingMatch(): Observable<any> {\n    return this.http.get(this.userService.url + '/matches', this.utilities.create_options(this.userService.get_token())).pipe(\n      tap((data) => {\n        //console.log('Waiting match: ' + JSON.stringify(data));\n      })\n    );\n  }\n\n  getMatchInfo(match_id: string, fullInfo?: boolean): Observable<any> {\n    let request = this.userService.url + '/matches/' + match_id;\n    if (fullInfo) {\n      request += '?type=fullInfo';\n    }\n    return this.http.get(request, this.utilities.create_options(this.userService.get_token()));\n  }\n\n  getUserActiveMatches(user: string): Observable<any> {\n    return this.getUserMatches(user).pipe(map(\n      (matchArray) => {\n        let match = {};\n        matchArray.forEach(matchAux => {\n          if (matchAux.status === 1 || matchAux.status === 2) {\n            match = matchAux;\n          }\n        });\n        return match;\n      }\n    ));\n  }\n\n  getUserMatches(user: string): Observable<any> {\n    return this.http.get(\n      this.userService.url + '/users/' + user + '/matches', this.utilities.create_options(this.userService.get_token())).pipe(\n        tap((data) => {\n          //console.log('Logged user match: ' + JSON.stringify(data));\n        })\n      );\n  }\n\n  createMatch(): Observable<any> {\n    return this.http.post(this.userService.url + '/matches', {}, this.utilities.create_options(this.userService.get_token())).pipe(\n      tap((data) => {\n        //console.log('Creating match: ' + JSON.stringify(data));\n      })\n    );\n  }\n\n  joinMatch(id: string, user_id: string): Observable<any> {\n    return this.http.put(\n      this.userService.url + '/matches/' + id + '/join',\n      {},\n      this.utilities.create_options(this.userService.get_token())).pipe(\n        tap((data) => {\n          //console.log('Creating match: ' + JSON.stringify(data));\n        })\n      );\n  }\n\n  initShips(): Array<Ship> {\n    const ships = new Array();\n    for (let i = 0; i < 4; i++) {\n      ships.push(new Ship(ShipEnum.DESTROYER));\n    }\n    for (let i = 0; i < 2; i++) {\n      ships.push(new Ship(ShipEnum.SUBMARINE));\n    }\n    for (let i = 0; i < 2; i++) {\n      ships.push(new Ship(ShipEnum.BATTLESHIP));\n    }\n    for (let i = 0; i < 1; i++) {\n      ships.push(new Ship(ShipEnum.AIRCRAFTCARRIER));\n    }\n    return ships;\n  }\n\n  sendBoard(board: Cell[][], ships: Ship[], matchId: string): Observable<any> {\n    const res = new Object();\n    const shipsArray = new Array();\n    ships.forEach(ship => {\n      const shipParts = new Array();\n      for (let i = 0; i < board.length; i++) {\n        for (let j = 0; j < board[i].length; j++) {\n          if (board[i][j].getStatus() === CellStatus.OCCUPIED && board[i][j].getShipRef() === ship.getId()) {\n            shipParts.push({ 'x': i, 'y': j });\n          }\n        }\n      }\n      shipsArray.push(shipParts);\n    });\n    res['positioning'] = { 'ships': shipsArray };\n    //console.log(JSON.stringify(res));\n    return this.http.put(\n      this.userService.url + '/matches/' + matchId + '/board',\n      res,\n      this.utilities.create_options(this.userService.get_token()));\n  }\n\n  shoot(x, y, matchId): Observable<any> {\n    //console.log({ position: { x: x, y: y } });\n    return this.http.put(\n      this.userService.url + '/matches/' + matchId,\n      { position: { x: x, y: y } },\n      this.utilities.create_options(this.userService.get_token()));\n  }\n\n}\n\nexport class Ship {\n\n  private static id = 0;\n  private id: number;\n  private type: ShipEnum;\n  private row: number;\n  private column: number;\n  private used = false;\n  private orientation: Orientation;\n  private x;\n  private y;\n\n  static getId() {\n    return Ship.id++;\n  }\n\n  constructor(type: ShipEnum) {\n    this.type = type;\n    this.orientation = Orientation.HORIZONTAL;\n    this.id = Ship.getId();\n  }\n\n  setOrientation(orientation: Orientation) {\n    this.orientation = orientation;\n  }\n\n  getOrientation() {\n    return this.orientation;\n  }\n\n  getLength(): number {\n    return this.type;\n  }\n\n  getPart() {\n    return new Array(this.type);\n  }\n\n  getType(): ShipEnum {\n    return this.type;\n  }\n\n  setUsed() {\n    this.used = true;\n  }\n\n  removeFromBoard() {\n    this.used = false;\n  }\n\n  isUsed() {\n    return this.used;\n  }\n\n  getId() {\n    return this.id;\n  }\n\n}\n\nexport class Cell {\n  private status = CellStatus.FREE;\n  private col;\n  private row;\n  private shipRef: number;\n  constructor(col, row) {\n    this.col = col;\n    this.row = row;\n  }\n  getCol() {\n    return this.col;\n  }\n  getRow() {\n    return this.row;\n  }\n  setStatus(status: CellStatus) {\n    this.status = status;\n  }\n  getStatus() {\n    return this.status;\n  }\n\n  setShipRef(shipRef) {\n    this.shipRef = shipRef;\n  }\n\n  getShipRef() {\n    return this.shipRef;\n  }\n\n  removeShipRef() {\n    this.shipRef = null;\n    this.status = CellStatus.FREE;\n  }\n}\n","module.exports = \"img{\\n  vertical-align: initial;\\n}\\n\\n.my-board .cell{\\n  width: 20px;\\n  height: 20px;\\n}\\n\\n.cell {\\n  width: 40px;\\n  height: 40px;\\n  border: 1px solid;\\n  border-color: #aaa;\\n  display: inline-block;\\n}\\n\\n.cell.opponent{\\n  cursor: pointer;\\n}\\n\\n.board-row {\\n  line-height: 80%;\\n}\\n\\n@media (min-width: 992px) {\\n  .cell {\\n    width: 45px;\\n    height: 45px;\\n  }\\n}\\n\\n@media screen and (max-width: 600px) {\\n  .cell {\\n    width: 20px;\\n    height: 20px;\\n  }\\n}\\n\"","module.exports = \"<div *ngIf=\\\"winner; then finish; else inGame\\\">\\n\\n</div>\\n\\n<ng-template #finish>\\n  <div class=\\\"alert alert-primary\\\">{{winner_username}} ha vinto la partita</div>\\n</ng-template>\\n\\n<ng-template #inGame>\\n  <h1 *ngIf=\\\"opponentUsr != null\\\">Match vs:\\n    <a routerLink=\\\"/user/{{opponentUsr}}\\\">{{opponentUsr}}</a>\\n  </h1>\\n  <h1 *ngIf=\\\"opponentUsr == null\\\">Match vs: giocatore eliminato</h1>\\n  <div class=\\\"alert alert-warning\\\" *ngIf=\\\"last_attacker === userService.get_userId()\\\">Attendi, è il turno dell'avversario</div>\\n  <div class=\\\"alert alert-primary\\\" *ngIf=\\\"last_attacker !== userService.get_userId()\\\">Tocca a te!</div>\\n</ng-template>\\n\\n<div *ngIf=\\\"error\\\" class=\\\"alert alert-danger\\\">\\n  {{error}}\\n</div>\\n\\n<div class=\\\"col\\\" style=\\\"padding:0\\\">\\n  <div class=\\\"accordion\\\" id=\\\"accordionExample\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\" id=\\\"headingThree\\\">\\n        <h5 class=\\\"mb-0\\\">\\n          <button class=\\\"btn btn-link collapsed\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#legenda\\\" aria-expanded=\\\"false\\\"\\n            aria-controls=\\\"legenda\\\">\\n            Legenda colori dei campi di gioco\\n          </button>\\n        </h5>\\n      </div>\\n      <div id=\\\"legenda\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingThree\\\" data-parent=\\\"#accordionExample\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"col\\\">\\n            <div style=\\\"height:20px;width:20px;background-color:#00ffff;display: inline-block;\\\"></div>\\n            <div style=\\\"display: inline-block;padding-left: 1em\\\">Avversario: Cella sconosciuta</div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div style=\\\"height:20px;width:20px;background-color:#000080;display: inline-block;\\\"></div>\\n            <div style=\\\"display: inline-block;padding-left: 1em\\\">Avversario: Sparo in acqua - Player: Acqua</div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div style=\\\"height:20px;width:20px;background-color:#ff0000;display: inline-block;\\\"></div>\\n            <div style=\\\"display: inline-block;padding-left: 1em\\\">Avversario: Colpita una nave</div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div style=\\\"height:20px;width:20px;background-color:#00ff00;display: inline-block;\\\"></div>\\n            <div style=\\\"display: inline-block;padding-left: 1em\\\">Nave distrutta</div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div style=\\\"height:20px;width:20px;background-color:black;display: inline-block;\\\"></div>\\n            <div style=\\\"display: inline-block;padding-left: 1em\\\">Player: Nave posizionata</div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4 my-board\\\">\\n    <h2>\\n      Il tuo campo\\n    </h2>\\n    <div class=\\\"board-row\\\" *ngFor=\\\"let row of userBoard; let rowIndex = index\\\">\\n      <div class=\\\"cell\\\" [ngStyle]=\\\"{'background-color': cell.color}\\\" [attr.row]=\\\"rowIndex\\\" [attr.col]=\\\"colIndex\\\" *ngFor=\\\"let cell of row; let rowIndex = index\\\">\\n        <!--<span *ngIf=\\\"cell.hit == true\\\">x</span>-->\\n        <img *ngIf=\\\"cell.hit == true\\\" src=\\\"http://www.onlygfx.com/wp-content/uploads/2017/07/x-brush-stroke-1-288x300.png\\\" style=\\\"width:100%;height:100%\\\">\\n      </div>\\n    </div>\\n  </div>\\n  <!--<div class=\\\"col-md-2 col-sm-6\\\">\\n    <h2>Le tue navi</h2>\\n\\n  </div>-->\\n  <div class=\\\"col-md-8\\\">\\n    <h2>\\n      Campo avversario\\n    </h2>\\n    <div class=\\\"board-row\\\" *ngFor=\\\"let row of opponentBoard; let rowIndex = index\\\">\\n      <div (click)=\\\"shoot(rowIndex, colIndex, cell.color)\\\" class=\\\"cell opponent\\\" [ngStyle]=\\\"{'background-color': cell.color}\\\" *ngFor=\\\"let cell of row; let colIndex = index\\\">\\n        <!--<span *ngIf=\\\"cell.hit == true\\\">x</span>-->\\n        <img *ngIf=\\\"cell.hit == true\\\" src=\\\"http://www.onlygfx.com/wp-content/uploads/2017/07/x-brush-stroke-1-288x300.png\\\" style=\\\"width:100%;height:100%\\\">\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UtilitiesService } from '../utilities.service';\nimport { MatchService } from '../match.service';\nimport * as io from 'socket.io-client';\n\n\n@Component({\n  selector: 'app-match',\n  templateUrl: './match.component.html',\n  styleUrls: ['./match.component.css']\n})\nexport class MatchComponent implements OnInit {\n  matchId: string;\n  private error = undefined;\n  private last_attacker;\n  private match;\n  private winner = undefined;\n  private winner_username = undefined;\n  opponentUsr: string;\n  userBoard;\n  userShips;\n  opponentBoard;\n\n  constructor(private userService: UserService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private utilities: UtilitiesService,\n    private matchService: MatchService, ) { }\n\n  private matchUpdate(): void {\n    this.matchService.getMatchInfo(this.matchId, true).subscribe(\n      (match) => {\n        // console.log(match);\n        this.match = match;\n        this.winner = match.winnerId;\n        this.last_attacker = match.lastIdAttacker;\n        this.opponentUsr = match.opponentInfo.username;\n        this.userBoard = match.userBoard.matrix;\n        this.opponentBoard = match.opponentBoard.matrix;\n        this.userShips = match.userBoard.ships;\n        if (match.winnerId !== undefined || match.winnerId != null) {\n          if (match.winnerId === match.userInfo._id) {\n            this.winner_username = match.userInfo.username;\n          } else {\n            this.winner_username = match.opponentInfo.username;\n          }\n        }\n      }\n    );\n  }\n\n  ngOnInit() {\n\n    this.utilities.check_auth(this.userService.get_token());\n    this.activatedRoute.paramMap.subscribe((data) => {\n      this.matchId = data.get('id');\n      const socket = io(this.userService.url);\n      socket.on('match update ' + this.matchId, (m) => {\n        this.error = undefined;\n        this.last_attacker = m.lastIdAttacker;\n        // console.log(\"MESSAGE RECEIVED \" + JSON.stringify(m));\n        this.matchUpdate();\n      });\n      this.matchUpdate();\n    });\n  }\n\n  shoot(x, y, color) {\n    if (color === '#00ffff') {\n      this.error = undefined;\n      this.matchService.shoot(x, y, this.matchId).subscribe(\n        (success) => {\n          this.winner = success.winner;\n          // console.log(success);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n    } else {\n      if (!this.winner) {\n        this.error = 'Hai già sparato in quella cella';\n      }\n\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"is_logged(); then loggedUser; else noLoggedUser\\\">\\n\\n</div>\\n\\n<ng-template #noLoggedUser>\\n  <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\\\">\\n    <div class=\\\"container\\\">\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">Battleship</a>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarResponsive\\\" aria-controls=\\\"navbarResponsive\\\"\\n        aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarResponsive\\\">\\n        <ul class=\\\"navbar-nav ml-auto\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Log-in</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/signup\\\">Registrati</a>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </nav>\\n</ng-template>\\n\\n<ng-template #loggedUser>\\n  <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\\\">\\n    <script>\\n      console.log(\\\"Display navbar for logged user\\\");\\n    </script>\\n    <div class=\\\"container\\\">\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/user\\\">Battleship</a>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarResponsive\\\" aria-controls=\\\"navbarResponsive\\\"\\n        aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarResponsive\\\">\\n        <ul class=\\\"navbar-nav ml-auto\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/user\\\">Account</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/match\\\">Partite</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/players\\\">Giocatori</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/chats\\\">Chats</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/scoreboard\\\">Scoreboard</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </nav>\\n</ng-template>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { UserService } from \"../user.service\";\nimport { UtilitiesService } from \"../utilities.service\";\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"./navbar.component.html\",\n  styleUrls: [\"./navbar.component.css\"]\n})\nexport class NavbarComponent implements OnInit {\n  constructor(private userService: UserService) { }\n  ngOnInit() {}\n  is_logged() {\n    return this.userService.is_user_logged();\n  }\n\n  logout() {\n    this.userService.logout();\n  }\n}\n","module.exports = \"\"","module.exports = \"<h1>Pagina non trovata</h1>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { UtilitiesService } from '../utilities.service';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor(private userService: UserService, private utilities: UtilitiesService) { }\n\n  ngOnInit() {\n    this.utilities.check_auth(this.userService.get_token());\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row col\\\">\\n  <h1>Giocatori presenti</h1>\\n</div>\\n<div class=\\\"row col py-3\\\">\\n  <div class=\\\"col-4\\\">\\n    Ricerca un giocatore\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <input type=\\\"text\\\" #keyword class=\\\"form-control\\\" (input)='searchPlayer(keyword.value)'>\\n  </div>\\n</div>\\n<div class=\\\"row col\\\">\\n  <div class=\\\"col-4\\\">\\n    <p>\\n      <b>\\n        Username\\n      </b>\\n    </p>\\n  </div>\\n  <div class=\\\"col-4\\\">\\n    <p>\\n      <b>\\n        Nome\\n      </b>\\n    </p>\\n  </div>\\n  <div class=\\\"col-4\\\">\\n    <p>\\n      <b>\\n        Cognome\\n      </b>\\n    </p>\\n  </div>\\n</div>\\n<div *ngFor=\\\"let player of players\\\">\\n  <div class=\\\"row col py-2\\\">\\n    <div class=\\\"col-4\\\">\\n      <a *ngIf=\\\"player.username != userLogged\\\" routerLink='/user/{{player.username}}'>{{player.username}}</a>\\n      <a *ngIf=\\\"player.username == userLogged\\\" routerLink='/user'>{{player.username}}</a>\\n    </div>\\n    <div class=\\\"col-4\\\">\\n      <a *ngIf=\\\"player.username != userLogged\\\" routerLink='/user/{{player.username}}'>{{player.name}}</a>\\n      <a *ngIf=\\\"player.username == userLogged\\\" routerLink='/user'>{{player.name}}</a>\\n    </div>\\n    <div class=\\\"col-4\\\">\\n      <a *ngIf=\\\"player.username != userLogged\\\" routerLink='/user/{{player.username}}'>{{player.surname}}</a>\\n      <a *ngIf=\\\"player.username == userLogged\\\" routerLink='/user'>{{player.surname}}</a>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { UtilitiesService } from '../utilities.service';\nimport { SocketioService } from '../socketio.service';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-players',\n  templateUrl: './players.component.html',\n  styleUrls: ['./players.component.css']\n})\nexport class PlayersComponent implements OnInit {\n  private players = [];\n  private userLogged;\n  constructor(private userService: UserService, private utilities: UtilitiesService, private socketService: SocketioService) { }\n\n  ngOnInit() {\n    this.utilities.check_auth(this.userService.get_token());\n    this.userLogged = this.userService.get_username();\n    this.searchPlayer('');\n    this.socketService.connect(this.userService.get_userId()).subscribe((m) => {\n      $(\"#myModal\").modal('show');\n      $('.modal-backdrop').removeClass(\"modal-backdrop\");\n      setTimeout(function(){\n        $('#myModal').modal('hide')\n      }, 2000);\n    })\n  }\n\n  searchPlayer(keyword: string) {\n    //console.log('Search player with: ' + keyword);\n    this.userService.searchUser(keyword).subscribe((value) => {\n      // console.log(JSON.stringify(d));\n      this.players = value;\n    }, (err) => {\n      console.log('Errore durante la ricerca: ' + err);\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row col\\\">\\n  <h1>Scoreboard</h1>\\n</div>\\n<div *ngIf=\\\"scoreboard.length === 0\\\">\\n  <h2>Nessun giocatore in classifica!</h2>\\n</div>\\n<!-- Header-->\\n<div *ngIf=\\\"scoreboard.length !== 0\\\" class=\\\"row\\\">\\n  <div class=\\\"col-8\\\">\\n    <p>\\n      <b>Username</b>\\n    </p>\\n  </div>\\n  <div class=\\\"col-4\\\">\\n    <p>\\n      <b> {{tipologiaScoreboard}} </b>\\n    </p>\\n  </div>\\n</div>\\n<!-- Content-->\\n<div *ngFor=\\\"let score of scoreboard\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-8\\\">\\n      <p>\\n        <a *ngIf=\\\"score.username != userService.get_username()\\\" routerLink='/user/{{score.username}}'>{{score.username}}</a>\\n        <a *ngIf=\\\"score.username == userService.get_username()\\\" routerLink='/user'>{{score.username}}</a>\\n      </p>\\n    </div>\\n    <div class=\\\"col-4\\\">\\n      <div ng-switch=\\\"tipologiaScoreboard\\\">\\n        <div ng-switch-when=\\\"Partite vinte\\\">\\n          {{score.partiteVinte}}\\n        </div>\\n        <div ng-switch-when=\\\"Partite perse\\\">\\n          {{score.partitePerse}}\\n        </div>\\n        <div ng-switch-when=\\\"Totali\\\">\\n          {{score.total}}\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <p>Mostra le prime posizioni nella classifica:</p>\\n  <select class=\\\"form-control\\\" (click)=\\\"changeScoreboard(limitScoreboard.value, typeScoreboard.value)\\\" #limitScoreboard>\\n    <option value=\\\"5\\\">5</option>\\n    <option value=\\\"10\\\" selected>10</option>\\n    <option value=\\\"20\\\">20</option>\\n    <option value=\\\"100\\\">100</option>\\n  </select>\\n</div>\\n<div class=\\\"row\\\">\\n  <p>Ordina la classifica in base a:</p>\\n  <select class=\\\"form-control\\\" (click)=\\\"changeScoreboard(limitScoreboard.value, typeScoreboard.value)\\\" #typeScoreboard>\\n    <option value=\\\"partiteVinte\\\">Partite vinte</option>\\n    <option value=\\\"partitePerse\\\">Partite perse</option>\\n    <option value=\\\"total\\\">Totale delle partite</option>\\n  </select>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { UtilitiesService } from '../utilities.service';\nimport { SocketioService } from '../socketio.service';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-scoreboard',\n  templateUrl: './scoreboard.component.html',\n  styleUrls: ['./scoreboard.component.css']\n})\nexport class ScoreboardComponent implements OnInit {\n  private scoreboard = [];\n  private tipologiaScoreboard;\n  constructor(private userService: UserService, private utilities: UtilitiesService, private socket: SocketioService) { }\n\n  ngOnInit() {\n    this.tipologiaScoreboard = 'Partite vinte';\n    this.utilities.check_auth(this.userService.get_token());\n    this.getScoreboard();\n    this.socket.connect(this.userService.get_userId()).subscribe((m) => {\n      $(\"#myModal\").modal('show');\n      $('.modal-backdrop').removeClass(\"modal-backdrop\");\n      setTimeout(function(){\n        $('#myModal').modal('hide')\n      }, 2000);\n    })\n  }\n\n  /**\n   * Metodo che viene attivato quando si cambia il 'select' nella pagina, cambia dinamicamente il numero di utenti da visualizzare\n   * @param n : numero di utenti da visualizzare\n   */\n  changeScoreboard(n: number, type: string) {\n    switch (type) {\n      case \"partiteVinte\": {\n        this.tipologiaScoreboard = \"Partite vinte\";\n        break;\n      }\n      case \"partitePerse\": {\n        this.tipologiaScoreboard = \"Partite perse\";\n        break;\n      }\n      case \"total\": {\n        this.tipologiaScoreboard = \"Totali\";\n        break;\n      }\n    }\n    this.getScoreboard({ 'limit': n, 'type': type });\n  }\n\n  /**\n   * Richiama il metodo getScoreboard in userService\n   */\n  getScoreboard(params = {}) {\n    this.scoreboard = [];\n    this.userService.getScoreboard(params).subscribe((scoreboard) => {\n      this.scoreboard = scoreboard;\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { UserService } from './user.service';\nimport { Observable } from 'rxjs';\nimport * as io from 'socket.io-client';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketioService {\n\n  private socket;\n\n  constructor(private userService: UserService) {\n  }\n\n  /**\n   * Il parametro id serve per una connessione broadcast specifica a quell'id\n   * Utile per far si che se un utente B scriva un messaggio ad un utente C\n   * non si triggera il canale broadcast dell'utente A loggato e visitante una pagina\n   * che richieda un canale broadcast\n   */\n  connect(id: string): Observable<any> {\n    //console.log(id);\n    this.socket = io(this.userService.url);\n    return new Observable((observer) => {\n      this.socket.on('broadcast ' + id, (m) => {\n        //console.log('Received socket message: ' + JSON.stringify(m));\n        observer.next(m);\n      });\n      this.socket.on('error ' + id, (err) => {\n        //console.log('Error socket received: ' + JSON.stringify(err));\n        observer.error(err);\n      });\n      this.socket.on('new_message_for ' + id, (m) => {\n        //console.log('Received message message: ' + JSON.stringify(m));\n        observer.next(m);\n      });\n      return {\n        unsubscribe() {\n          this.socket.disconnect();\n        }\n      };\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"routingNotCurrentUser; then notThisUser; else thisUser\\\">\\n\\n</div>\\n\\n<ng-template #notThisUser>\\n  <div class=\\\"row col\\\">\\n    <h1 *ngIf=\\\"otherUser != null\\\">Stai visualizzando il profilo di {{otherUser.username}}</h1>\\n  </div>\\n  <div class=\\\"row col\\\">\\n    <h1 *ngIf=\\\"otherUser == null\\\">Giocatore non trovato</h1>\\n  </div>\\n  <!-- Profile image\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col text-center\\\">\\n      <img src=\\\"https://pbs.twimg.com/profile_images/1532886460/He-man_400x400.jpg\\\" style=\\\"width:13em;border-radius:50%\\\" class=\\\"center-block\\\">\\n    </div>\\n  </div>-->\\n  <!-- Info account-->\\n  <div *ngIf=\\\"otherUser != null\\\" class=\\\"container py-5\\\">\\n    <div class=\\\"row py-2\\\">\\n      <div class=\\\"col-6\\\">\\n        <b>Username</b>\\n      </div>\\n      <div class=\\\"col-6\\\">\\n        <p>{{otherUser.username}}</p>\\n      </div>\\n    </div>\\n    <div class=\\\"row py-2\\\">\\n      <div class=\\\"col-6\\\">\\n        <b>Nome</b>\\n      </div>\\n      <div class=\\\"col-6\\\">\\n        <p>{{otherUser.name}}</p>\\n      </div>\\n    </div>\\n    <div class=\\\"row py-2\\\">\\n      <div class=\\\"col-6\\\">\\n        <b>Cognome</b>\\n      </div>\\n      <div class=\\\"col-6\\\">\\n        <p>{{otherUser.surname}}</p>\\n      </div>\\n    </div>\\n    <div class=\\\"row py-2\\\">\\n      <div class=\\\"col-6\\\">\\n        <b>Email</b>\\n      </div>\\n      <div class=\\\"col-6\\\">\\n        <p>{{otherUser.mail}}</p>\\n      </div>\\n    </div>\\n    <div class=\\\"row py-2\\\">\\n      <div class=\\\"col-6\\\">\\n        <b>Partite vinte</b>\\n      </div>\\n      <div class=\\\"col-6\\\">\\n        <p>{{otherUser.partiteVinte}}</p>\\n      </div>\\n    </div>\\n    <div class=\\\"row py-2\\\">\\n      <div class=\\\"col-6\\\">\\n        <b>Partite perse</b>\\n      </div>\\n      <div class=\\\"col-6\\\">\\n        <p>{{otherUser.partitePerse}}</p>\\n      </div>\\n    </div>\\n    <div class=\\\"row py-2\\\">\\n      <div class=\\\"col-6\\\">\\n        <b>Partite giocate</b>\\n      </div>\\n      <div class=\\\"col-6\\\">\\n        <p>{{totalePartite}}</p>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"isAdmin\\\" style=\\\"padding-left:0\\\" class=\\\"col-12 py-2\\\">\\n      <input type=\\\"checkbox\\\" [checked]=\\\"otherUserIsAdmin\\\" (click)=\\\"changeStatusAdminOtherAccount()\\\" #changeOtherAdmin> Amministratore\\n    </div>\\n    <div class=\\\"row py-2\\\">\\n      <div class=\\\"col-12\\\">\\n        <a routerLink=\\\"/user/{{otherUser.username}}/matches\\\">Partite giocate</a>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"errmessage\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n      Errore: {{errmessage}}\\n    </div>\\n    <div *ngIf=\\\"okmessage\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n      {{okmessage}}\\n    </div>\\n    <div class=\\\"row col py-2\\\">\\n      <button *ngIf=\\\"isAdmin\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateInfoAdminOtherUser(otherUser.username, otherUser.isAdmin)\\\">Aggiorna le informazioni</button>\\n    </div>\\n    <div class=\\\"row col py-2\\\">\\n      <button *ngIf=\\\"isAdmin\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteThisUser()\\\">Elimina l'utente</button>\\n    </div>\\n    <div class=\\\"row col py-2\\\">\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"clickButtonSendMessageUserInfo()\\\">Invia un messaggio</button>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #thisUser>\\n  <div class=\\\"row col\\\">\\n    <h1>Il tuo profilo</h1>\\n  </div>\\n  <!-- Profile image\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col text-center\\\">\\n      <img src=\\\"https://pbs.twimg.com/profile_images/1532886460/He-man_400x400.jpg\\\" style=\\\"width:13em;border-radius:50%\\\" class=\\\"center-block\\\">\\n    </div>\\n  </div>-->\\n  <!-- Info account-->\\n  <div class=\\\"container py-5\\\">\\n    <div class=\\\"row py-2\\\">\\n      <div class=\\\"col-6\\\">\\n        <b>Username</b>\\n      </div>\\n      <div class=\\\"col-6\\\">\\n        <input type=\\\"text\\\" #usertxt required=\\\"true\\\" value=\\\"{{this.userService.get_name()}}\\\" class=\\\"form-control\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"row py-2\\\">\\n      <div class=\\\"col-6\\\">\\n        <b>Nome</b>\\n      </div>\\n      <div class=\\\"col-6\\\">\\n        <input type=\\\"text\\\" #nametxt required=\\\"true\\\" value=\\\"{{this.userService.get_name()}}\\\" class=\\\"form-control\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"row py-2\\\">\\n      <div class=\\\"col-6\\\">\\n        <b>Cognome</b>\\n      </div>\\n      <div class=\\\"col-6\\\">\\n        <input type=\\\"text\\\" #surnametxt required=\\\"true\\\" value=\\\"{{this.userService.get_surname()}}\\\" class=\\\"form-control\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"row py-2\\\">\\n      <div class=\\\"col-6\\\">\\n        <b>Email</b>\\n      </div>\\n      <div class=\\\"col-6\\\">\\n        <input type=\\\"email\\\" #mailtxt required=\\\"true\\\" value=\\\"{{this.userService.get_mail()}}\\\" class=\\\"form-control\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"row py-2\\\">\\n      <div class=\\\"col-6\\\">\\n        <input type=\\\"password\\\" #newpassword1 required=\\\"true\\\" placeholder=\\\"Nuova password\\\" class=\\\"form-control\\\">\\n      </div>\\n      <div class=\\\"col-6\\\">\\n        <input type=\\\"password\\\" #newpassword2 required=\\\"true\\\" placeholder=\\\"Ripeti nuova password\\\" class=\\\"form-control\\\">\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"userService.is_admin()\\\" style=\\\"padding-left:0\\\" class=\\\"col-12 py-2\\\">\\n      <input type=\\\"checkbox\\\" [checked]=\\\"isAdmin\\\" #changeThisAdmin (click)=\\\"changeStatusAdminThisAccount()\\\"> Amministratore\\n    </div>\\n    <div class=\\\"row py-2\\\">\\n      <div class=\\\"col-12\\\">\\n        <a routerLink=\\\"/user/{{this.userService.get_username()}}/matches\\\">Partite giocate</a>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"errmessage\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n      Errore: {{errmessage}}\\n    </div>\\n    <div *ngIf=\\\"okmessage\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n      {{okmessage}}\\n    </div>\\n    <div class=\\\"row col py-2\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateInfo(usertxt.value, nametxt.value, surnametxt.value, mailtxt.value, newpassword1.value, newpassword2.value, admin)\\\">Aggiorna le informazioni</button>\\n    </div>\\n    <div class=\\\"row col py-2\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteThisUser()\\\">Elimina l'utente</button>\\n    </div>\\n  </div>\\n</ng-template>\"","import { Component, OnInit } from \"@angular/core\";\nimport { UserService } from \"../user.service\";\nimport { Router, RouterLink } from \"@angular/router\";\nimport { UtilitiesService } from \"../utilities.service\";\nimport { SocketioService } from \"../socketio.service\";\n\ndeclare var $: any;\n\n@Component({\n  selector: \"app-user-info\",\n  templateUrl: \"./user-info.component.html\",\n  styleUrls: [\"./user-info.component.css\"]\n})\nexport class UserInfoComponent implements OnInit {\n\n  private errmessage = undefined;\n  private okmessage = undefined;\n\n  // Variabile per controllare se l\"utente corrente è admin\n  private isAdmin = undefined;\n\n  // Variabili usate per la view di altri utenti\n  private routingNotCurrentUser = undefined;\n  private otherUser = undefined;\n\n  // Variabile per l\"utente visualizzato\n  private username = undefined;\n  private totalePartite = undefined;\n\n  constructor(private userService: UserService,\n    private router: Router,\n    private utilities: UtilitiesService,\n    private socket: SocketioService) { }\n\n  ngOnInit() {\n    // console.log(this.userService.get_token());\n    this.utilities.check_auth(this.userService.get_token());\n    //console.log(\"Routing in user component: \" + this.router.url);\n    if (this.router.url !== \"/user\") {\n      this.routingNotCurrentUser = this.router.url.split(\"/\").pop();\n      //console.log(\"User: \" + this.routingNotCurrentUser);\n      this.getUser();\n    } else {\n      this.username = this.userService.get_username();\n    }\n    this.isAdmin = this.userService.is_admin();\n    this.socket.connect(this.userService.get_userId()).subscribe((m) => {\n      $(\"#myModal\").modal(\"show\");\n      $(\".modal-backdrop\").removeClass(\"modal-backdrop\");\n      setTimeout(function () {\n        $(\"#myModal\").modal(\"hide\");\n      }, 2000);\n    });\n  }\n\n  updateInfo(username: string, name: string, surname: string, mail: string, password1: string, password2: string) {\n    if (username === \"\" || name === \"\" || surname === \"\" || mail === \"\" || password1 === \"\" || password2 === \"\") {\n      this.errmessage = \"riempire tutti i campi.\";\n      this.okmessage = undefined;\n    } else {\n      if (password1 !== password2) {\n        this.errmessage = \"le password sono diverse.\";\n        this.okmessage = undefined;\n      } else {\n        this.userService.updateInfo(username, name, surname, mail, password1, this.isAdmin).subscribe((d) => {\n          this.userService.renew().subscribe((returnData) => {\n            //console.log(JSON.stringify(returnData));\n            //console.log(\"User info \" + username + \" update\");\n            this.username = username;\n            this.errmessage = undefined;\n            this.okmessage = \"Account aggiornato con successo.\";\n          }, (err) => {\n            console.log(\"User info \" + username + \" update error: \" + err);\n            this.errmessage = err.error.errormessage || err.error.message;\n            this.okmessage = undefined;\n          }, () => {\n          //console.log(\"Completed\");\n        });\n      });\n    }\n  }\n}\n\n  updateInfoAdminOtherUser(username: string, isAdmin: boolean) {\n    this.userService.updateInfoAdmin(username, isAdmin).subscribe((d) => {\n      //console.log(\"User info \" + username + \" update in status admin: \" + isAdmin);\n      this.errmessage = undefined;\n      this.okmessage = \"Account aggiornato con successo.\";\n    }, (err) => {\n      //console.log(\"User info \" + username + \" update in status admin \" + isAdmin + \"error: \" + err);\n      this.errmessage = err.error.errormessage || err.error.message;\n      this.okmessage = undefined;\n    });\n  }\n\n  changeStatusAdminOtherAccount() {\n    //console.log(\"Stato vecchio: \" + this.otherUser.isAdmin + \" stato nuovo \" + !this.otherUser.isAdmin);\n    this.otherUser.isAdmin = !this.otherUser.isAdmin;\n  }\n\n  changeStatusAdminThisAccount() {\n    //console.log(\"Stato vecchio: \" + this.isAdmin + \" stato nuovo \" + !this.isAdmin);\n    this.isAdmin = !this.isAdmin;\n  }\n\n  deleteThisUser() {\n    const answer = confirm(\"Sei sicuro di cancellare l'utente ? \");\n    const userToDelete = this.username;\n    if (answer) {\n      this.userService.deleteUser(userToDelete).subscribe((d) => {\n        //console.log(\"User \" + userToDelete + \" deleted\");\n        if (userToDelete === this.userService.get_username()) {\n          this.userService.logout();\n          this.router.navigate([\"/\"]);\n        } else {\n          this.router.navigate([\"/players\"]);\n        }\n      }, (err) => {\n        console.log(\"Delete user \" + userToDelete + \" error \" + err);\n      });\n    }\n  }\n\n  getUser() {\n    this.userService.getInfoUser(this.routingNotCurrentUser).subscribe((d) => {\n      //console.log(\"Getting user \" + JSON.stringify(d) + \" OK\");\n      this.otherUser = d;\n      if (this.otherUser != null) {\n        this.username = this.otherUser.username;\n        this.totalePartite = this.otherUser.partiteVinte + this.otherUser.partitePerse;\n      }\n    }, (err) => {\n      console.log(\"Error getting user \" + err);\n    });\n  }\n\n  /**\n   * Click del pulsante \"Invia messaggio\" sulla scheda dell\"utente\n   * Inizialmente richiede al server la lista delle chat dell\"utente loggato, se scorrendo la lista\n   * trova la chat tra i 2 utenti, si viene reindirizzati a quella chat, altrimenti ne\n   * viene creata una nuova\n   */\n  clickButtonSendMessageUserInfo() {\n    this.userService.getUserChats().subscribe((data) => {\n      const chats = data[0][\"chatList\"];\n      let find = false;\n      chats.forEach(element => {\n        // console.log(JSON.stringify(element) + \" ID 1 USER CHAT \" +\n        // element[\"user1ID\"][\"_id\"] + \" ID 2 USER \" + element[\"user2ID\"][\"_id\"]);\n        // console.log(\"OTHER USER ID \" + this.otherUser._id + \" CURRENT ID \" + this.userService.get_userId());\n        if ((element[\"user1ID\"][\"_id\"] === this.otherUser._id &&\n        element[\"user2ID\"][\"_id\"] === this.userService.get_userId()) ||\n        (element[\"user2ID\"][\"_id\"] === this.otherUser._id && element[\"user1ID\"][\"_id\"] === this.userService.get_userId())) {\n          find = true;\n          this.router.navigate([\"/chats/\" + element[\"_id\"]]);\n        }\n      });\n      if (!find) {\n        this.createChat();\n      }\n    }, (err) => {\n      console.log(\"Error getting active user chat \" + err);\n    });\n  }\n\n  /**\n   * Crea la chat tra l\"utente loggato e l\"utente visualizzato nella scheda, infine si viene reindirizzati alla nuova chat\n   */\n  createChat() {\n    this.userService.createChat(this.username).subscribe((newChat) => {\n      //console.log(\"CHAT CREATA \" + JSON.stringify(newChat));\n      this.router.navigate([\"/chats/\" + newChat[\"id\"]]);\n    }, (err) => {\n      console.log(\"Error creating user chat \" + err);\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row col\\\">\\n  <h1>Log-in</h1>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <p>Inserisci le tue credenziali per accedere</p>\\n  </div>\\n</div>\\n<form #loginForm=\\\"ngForm\\\">\\n  <div class=\\\"row py-2\\\">\\n    <div class=\\\"col-sm-6\\\">\\n      <p>Username</p>\\n    </div>\\n    <div class=\\\"col-sm-6\\\">\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" required placeholder=\\\"username\\\" id=\\\"inputuser\\\" class=\\\"form-control\\\" name=\\\"username\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"row py-2\\\">\\n    <div class=\\\"col-sm-6\\\">\\n      <p>Password</p>\\n    </div>\\n    <div class=\\\"col-sm-6\\\">\\n      <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" required placeholder=\\\"password\\\" id=\\\"inputpassword\\\" class=\\\"form-control\\\" name=\\\"password\\\" (keyup.enter)=\\\"login()\\\" >\\n    </div>\\n  </div>\\n  <div class=\\\"row col-sm-12\\\">\\n    <label>\\n      <input type=\\\"checkbox\\\" [(ngModel)]=\\\"rememberAccess\\\" name=\\\"rememberAccess\\\" value=\\\"{{rememberAccess}}\\\"> Ricordami\\n    </label>\\n  </div>\\n</form>\\n<div *ngIf=\\\"errmessage\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n  Errore di login: {{errmessage}}\\n</div>\\n<div class=\\\"row col-sm-12 py-2\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"login()\\\">Login</button>\\n</div>\\n<div class=\\\"row col-sm-12 py-2\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" routerLink=\\\"/signup\\\">Registrati</button>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { UserService } from \"../user.service\";\nimport { Router } from \"@angular/router\";\nimport { UtilitiesService } from \"../utilities.service\";\n\n@Component({\n  selector: \"app-user-login\",\n  templateUrl: \"./user-login.component.html\",\n  styleUrls: [\"./user-login.component.css\"]\n})\nexport class UserLoginComponent implements OnInit {\n\n  private errmessage = undefined;\n  username = \"\";\n  password = \"\";\n  rememberAccess = \"true\";\n\n  constructor(private userService: UserService, private router: Router) { }\n\n  ngOnInit() {\n    if (this.userService.is_user_logged()) {\n      this.router.navigate([\"/user\"]);\n    }\n  }\n\n  login() {\n    if (this.username === \"\" || this.username === \"\") {\n      this.errmessage = \"dati mancanti.\";\n    } else {\n      //console.log(this.username + \" try to login\");\n      this.userService.login(this.username, this.password, Boolean(this.rememberAccess)).subscribe((d) => {\n        this.errmessage = undefined;\n        this.router.navigate([\"/user\"]);\n      }, (err) => {\n        console.log(\"Login error: \" + JSON.stringify(err.error.errormessage));\n        if (JSON.stringify(err.error.errormessage) === undefined) {\n          this.errmessage = \"impossibile contattare il server\";\n        } else {\n          this.errmessage = err.error.errormessage;\n        }\n      });\n    }\n  }\n}\n","module.exports = \".form-group{\\n    width: 50%;\\n}\\n.form-control{\\n    width: 90%;\\n}\"","module.exports = \"<div class=\\\"row col\\\">\\n  <h1>Registrazione</h1>\\n</div>\\n\\n<div class=\\\"row col\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"inputName\\\">Nome</label>\\n    <input type=\\\"text\\\" #name=\\\"ngModel\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.name\\\" id=\\\"inputNewName\\\" placeholder=\\\"Inserisci il nome\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"inputSurname\\\">Cognome</label>\\n    <input type=\\\"text\\\" #surname=\\\"ngModel\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.surname\\\" id=\\\"inputNewSurname\\\" placeholder=\\\"Inserisci il cognome\\\">\\n  </div>\\n</div>\\n<div class=\\\"row col\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"inputUsername\\\">Username</label>\\n    <input type=\\\"text\\\" #username=\\\"ngModel\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.username\\\" id=\\\"inputNewUsername\\\" placeholder=\\\"Inserisci lo Username\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"inputEmail1\\\">Indirizzo Email</label>\\n    <input type=\\\"email\\\" #mail=\\\"ngModel\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.mail\\\" id=\\\"inputNewEmail\\\" pattern=\\\"[^@\\\\s]+@[^@\\\\s]+\\\\.[^@\\\\s]+\\\"\\n      placeholder=\\\"Inserisci l'email\\\">\\n  </div>\\n</div>\\n<div class=\\\"row col\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"inputPassword1\\\">Password</label>\\n    <input type=\\\"password\\\" #password1 class=\\\"form-control\\\" id=\\\"inputNewPassword1\\\" placeholder=\\\"Inserisci la password\\\" (input)='checkPassword(password1.value, password2.value)'>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"inputPassword2\\\">Password</label>\\n    <input type=\\\"password\\\" #password2 class=\\\"form-control\\\" id=\\\"inputNewPassword2\\\" placeholder=\\\"Ripeti la password\\\" (input)='checkPassword(password1.value, password2.value)'>\\n  </div>\\n</div>\\n<div *ngIf=\\\"!equalpassword && password1.value != ''\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n  Le password sono diverse.\\n</div>\\n<div *ngIf=\\\"errmessage\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n  Errore durante la registrazione: {{errmessage}}\\n</div>\\n<button [disabled]=\\\"!equalpassword\\\" class=\\\"btn btn-primary\\\" id=\\\"registerNewAccount\\\" (click)=\\\"signup();\\\">Crea l'account</button>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-user-signup',\n  templateUrl: './user-signup.component.html',\n  styleUrls: ['./user-signup.component.css']\n})\nexport class UserSignupComponent implements OnInit {\n  private errmessage = undefined;\n  private user = { mail: '', name: '', surname: '', username: '', password: '' };\n  private equalpassword = false;\n  constructor(private userService: UserService, private router: Router) { }\n\n  ngOnInit() { }\n\n  checkPassword(password1: string, password2: string) {\n    if (password1 === password2) {\n      this.equalpassword = true;\n      this.user.password = password1;\n    }\n    else {\n      this.equalpassword = false;\n      this.user.password = undefined;\n    }\n  }\n\n  signup() {\n    if (this.equalpassword == true) {\n      this.userService.register(this.user).subscribe( result => {\n        //console.log(this.user.username + \" added\");\n        this.errmessage = undefined;\n        this.router.navigate(['/login']);\n      }, err => {\n        console.log(\"Signup error: \" + JSON.stringify(err));\n        this.errmessage = err.error.errormessage || err.error.message;\n      });\n    }\n    else {\n      this.errmessage = \"password diverse\"\n    }\n  }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams, HttpErrorResponse } from '@angular/common/http';\nimport * as jwt_decode from 'jwt-decode';\nimport { of, Observable } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { UtilitiesService } from './utilities.service';\n// import {ErrorObservable} from 'rxjs/observable/ErrorObservable'\n\nconst token_name = 'battleship_token';\n\n@Injectable()\nexport class UserService {\n  constructor(private http: HttpClient, private router: Router, private utilities: UtilitiesService) {\n    // console.log('User Service istanziato');\n  }\n\n  private token = '';\n  public url = UtilitiesService.getPublicUrl();\n\n  public is_logged: EventEmitter<any> = new EventEmitter();\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      console.error('Errore generato: ', error.error.message);\n    } else {\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        'body was: ' + JSON.stringify(error.error)\n      );\n    }\n  }\n\n  public login(user: string, password: string, remember?: boolean): Observable<any> {\n    console.log(remember);\n    const optionsLogin = {\n      headers: new HttpHeaders({\n        authorization: 'Basic ' + btoa(user + ':' + password),\n        'cache-control': 'no-cache',\n        'Content-Type': 'application/x-www-form-urlencoded',\n      }),\n    };\n    if (remember === true) {\n      optionsLogin['params'] = new HttpParams().set('remindMe', 'true');\n    }\n    console.log('Login: ' + this.url + '/login ' + JSON.stringify(optionsLogin));\n    return this.http.get(this.url + '/login', optionsLogin).pipe(\n      tap((data) => {\n        // console.log(JSON.stringify(data));\n        this.is_logged.emit(true);\n        this.token = data.token;\n        localStorage.setItem(token_name, this.token);\n      }));\n  }\n\n  renew(): Observable<any> {\n    return this.http.get(this.url + '/renew', this.utilities.create_options(this.token)).pipe(\n      tap(\n        (data) => {\n          this.token = data.token;\n          localStorage.setItem(token_name, this.token);\n          this.is_logged.emit(true);\n        },\n        (error) => {\n          console.log('error: ' + error);\n        },\n        () => {\n          console.log('complete');\n        })\n    );\n  }\n\n  register(user): Observable<any> {\n    console.log(JSON.stringify(user));\n    return this.http.post(this.url + '/users', user, this.utilities.create_options(this.get_token())).pipe(\n      tap((data) => {\n        // console.log(JSON.stringify(data));\n      }, (error) => {\n        console.log('ERRORE REGISTRAZIONE ' + error.error.errormessage);\n      })\n    );\n  }\n\n  // Modifica le informazioni dell'utente\n  updateInfo(username: string, name: string, surname: string, mail: string, password: string, isAdmin: boolean): Observable<any> {\n    const user = {\n      username: username,\n      name: name,\n      surname: surname,\n      password: password,\n      mail: mail,\n      isAdmin: isAdmin\n    };\n\n    console.log('Updating at: ' + this.url + '/users/' + this.get_username() + ' user: ' + JSON.stringify(user));\n\n    return this.http.put(this.url + '/users/' + this.get_username(), user, this.utilities.create_options(this.get_token())).pipe(\n      tap((data) => {\n        // console.log(JSON.stringify(data));\n      })\n    );\n  }\n\n  // Modifica lo status isAdmin dell'utente username\n  updateInfoAdmin(username: string, isAdmin: boolean): Observable<any> {\n    return this.http.put(this.url + '/users/' + username, { 'username': username, 'isAdmin': isAdmin },\n      this.utilities.create_options(this.get_token())).pipe(\n        tap((data) => {\n          // console.log(JSON.stringify(data));\n        })\n      );\n  }\n\n  deleteUser(username: string): Observable<any> {\n    console.log('Deleting user ' + username);\n    return this.http.delete(this.url + '/users/' + username, this.utilities.create_options(this.get_token())).pipe(\n      tap((data) => {\n        // console.log(JSON.stringify(data));\n      })\n    );\n  }\n\n  logout() {\n    this.token = '';\n    this.is_logged.emit(false);\n    localStorage.setItem(token_name, this.token);\n    this.router.navigate(['/']);\n  }\n\n  getInfoUser(user: string): Observable<any> {\n    return this.http.get(this.url + '/users/' + user, this.utilities.create_options(this.get_token())).pipe(\n      tap((data) => {\n        // console.log('Getting info user: ' + JSON.stringify(data));\n      })\n    );\n  }\n\n  searchUser(keyword: string): Observable<any> {\n    if (keyword === undefined || keyword === '') {\n      return this.http.get(this.url + '/users', this.utilities.create_options(this.get_token())).pipe(\n        tap((data) => {\n          // console.log('Searching user: ' + JSON.stringify(data));\n        })\n      );\n    } else {\n      return this.http.get(this.url + '/users', this.utilities.create_options(this.get_token(), { 'keysearched': keyword })).pipe(\n        tap((data) => {\n          // console.log('Searching user: ' + JSON.stringify(data));\n        })\n      );\n    }\n  }\n\n  getScoreboard(params = {}): Observable<any> {\n    return this.http.get(this.url + '/scoreboard', this.utilities.create_options(this.get_token(), params)).pipe(\n      tap((data) => {\n        // console.log(JSON.stringify(data));\n      })\n    );\n  }\n\n  getUserChats(): Observable<any> {\n    return this.http.get(this.url + '/chats', this.utilities.create_options(this.get_token())).pipe(\n      tap((data) => {\n        // console.log(JSON.stringify(data));\n      })\n    );\n  }\n\n  getUserSingleChat(idChat: string): Observable<any> {\n    return this.http.get(this.url + '/chats/' + idChat, this.utilities.create_options(this.get_token())).pipe(\n      tap((data) => {\n        // console.log(JSON.stringify(data));\n      })\n    );\n  }\n\n  createChat(username: string): Observable<any> {\n    return this.http.post(this.url + '/chats', { 'destinatario': username }, this.utilities.create_options(this.get_token())).pipe(\n      tap((data) => {\n        // console.log(JSON.stringify(data));\n      })\n    );\n  }\n\n  sendMessage(idChat: string, text: string) {\n    const date = Date.now();\n    return this.http.post(this.url + '/chats/' + idChat, { 'sentAt': date, 'text': text },\n      this.utilities.create_options(this.get_token())).pipe(\n        tap((data) => {\n          // console.log(JSON.stringify(data));\n        })\n      );\n  }\n\n  deleteChat(id: string) {\n    return this.http.delete(this.url + '/chats/' + id, this.utilities.create_options(this.get_token())).pipe(\n      tap((data) => {\n        // console.log(JSON.stringify(data));\n      })\n    );\n  }\n\n  getMatches(user: string) {\n    return this.http.get(this.url + '/users/:user/matches', this.utilities.create_options(this.get_token())).pipe(\n      tap((data) => {\n        // console.log(JSON.stringify(data));\n      })\n    );\n  }\n\n  // ----------------- JTW GETTER -----------------\n\n  get_token() {\n    if (this.token === '' && localStorage.getItem(token_name) !== null) {\n      this.token = localStorage.getItem(token_name);\n      this.renew().subscribe(\n        (data) => {\n          console.log('Token renewed successfully');\n        });\n    }\n    return this.token;\n  }\n\n  get_name() {\n    return jwt_decode(this.token).name;\n  }\n\n  get_surname() {\n    return jwt_decode(this.token).surname;\n  }\n\n  get_username() {\n    return jwt_decode(this.token).username;\n  }\n\n  get_userId() {\n    return jwt_decode(this.token).id;\n  }\n\n  get_mail() {\n    return jwt_decode(this.token).mail;\n  }\n\n  is_admin(): boolean {\n    return jwt_decode(this.token).isAdmin;\n  }\n\n  is_user_logged(): boolean {\n    return !(this.token === '');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClientModule, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilitiesService {\n\n  public static getPublicUrl() {\n    return 'http://10.0.2.2:8080';\n  }\n  constructor(private router: Router) { }\n\n  public create_options(token, params = {}) {\n    // console.log('TOKEN: ' + JSON.stringify(token) + 'PARAMS QUERY ' + JSON.stringify(params));\n    return {\n      headers: new HttpHeaders({\n        'authorization': 'Bearer ' + token,\n        'cache-control': 'no-cache',\n        'Content-Type': 'application/json',\n      }),\n      params: new HttpParams({ fromObject: params })\n    };\n  }\n\n  public check_auth(token: string) {\n    if (token.length === 0) {\n      this.router.navigate(['/']);\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nif (environment.production) {\n  enableProdMode();\n}\n// Device bootstrap\ndocument.addEventListener('deviceready', () => {\n  platformBrowserDynamic().bootstrapModule(AppModule).catch(err =>\n    console.log(err));\n}, false);\n","/* (ignored) */"],"sourceRoot":""}